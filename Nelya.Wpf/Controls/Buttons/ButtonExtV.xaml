<!--  =======================================================================================  -->
<!--  Copyright 2024 - Nelya 2.0 - A. Herrero - Vea el archivo Licencia.txt para mas detalles  -->
<!--  =======================================================================================  -->
<Button
    x:Class="Nelya.Wpf.Controls.Buttons.ButtonExtV"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Nelya.Wpf.Controls.Buttons">


    <Button.Style>

        <Style TargetType="local:ButtonExtV">
            <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
            <Setter Property="Margin" Value="2,5" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="{StaticResource ButtonForegraound}" />
            <Setter Property="IconFontColor" Value="{StaticResource ButtonForegraound}" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="62" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="0,10,0,10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:ButtonExtV">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=local:ButtonExtV}, Path=CornerRadius}">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentTemplate="{TemplateBinding ContentTemplate}">
                                <ContentPresenter.Content>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock
                                            Margin="{Binding RelativeSource={RelativeSource AncestorType=local:ButtonExtV}, Path=IconFontMargin}"
                                            FontFamily="{Binding RelativeSource={RelativeSource AncestorType=local:ButtonExtV}, Path=IconFontFamily}"
                                            FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:ButtonExtV}, Path=IconFontSize}"
                                            Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:ButtonExtV}, Path=IconFontColor}"
                                            Text="{Binding RelativeSource={RelativeSource AncestorType=local:ButtonExtV}, Path=IconFontText}"
                                            TextAlignment="Center"
                                            TextWrapping="Wrap"
                                            Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:ButtonExtV}, Path=IconFontTextVisibility}" />
                                        <TextBlock
                                            Margin="{Binding RelativeSource={RelativeSource AncestorType=local:ButtonExtV}, Path=IconTextMargin}"
                                            Text="{Binding RelativeSource={RelativeSource AncestorType=local:ButtonExtV}, Path=Title}"
                                            TextAlignment="Center"
                                            TextWrapping="Wrap"
                                            Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:ButtonExtV}, Path=TitleVisibility}" />
                                    </StackPanel>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=OnMouseBrush}" />
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=OnMouseBrush}" />
                    <Setter Property="IconFontColor" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=OnMouseBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=OnPressBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="BorderBrush" Value="{StaticResource ButtonDisbaledBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource ButtonDisbaledBrush}" />
                    <Setter Property="IconFontColor" Value="{StaticResource ButtonDisbaledBrush}" />
                </Trigger>
            </Style.Triggers>

        </Style>

    </Button.Style>




</Button>
